{"ast":null,"code":"import _objectSpread from \"/home/kushank/Documents/store/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/kushank/Documents/store/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log('this is an increment method');\n    };\n\n    this.decrement = id => {\n      console.log('this is an decrement method');\n    };\n\n    this.removeItem = id => {\n      console.log('item removed');\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals;\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/kushank/Documents/store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","console","log","decrement","removeItem","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts , detailProduct } from './data'\nconst ProductContext = React.createContext();\n\n\nclass ProductProvider extends Component {\n    state ={\n        products : [],\n        detailProduct: detailProduct,\n        cart : [],\n        modalOpen : false,\n        modalProduct : detailProduct,\n        cartSubTotal : 0,\n        cartTax : 0,\n        cartTotal : 0\n    };\n    componentDidMount () {\n        this.setProducts();\n    }\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts,singleItem];\n        })\n          this.setState(() => {\n              return { products : tempProducts };\n          });\n    };\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n    handleDetail = (id) => {\n      const product = this.getItem(id);\n      this.setState(() => {\n          return{detailProduct : product}\n      })\n    };\n\n    addToCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id))\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n           this.setState(()=>{\n               return{products : tempProducts,cart : [...this.state.cart,product] };\n           }, () => {\n               this.addTotals();\n            }\n        );\n    };\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct : product , modalOpen : true}\n        })\n    }\n    closeModal = () => {\n         this.setState (() => {\n             return {modalOpen : false}\n         })\n    }\n     increment = (id) => {\n         console.log('this is an increment method');\n     }\n     decrement = (id) => {\n        console.log('this is an decrement method');\n    }\n    removeItem = (id) => {\n         console.log('item removed');\n    }\n    clearCart = () => {\n              this.setState(() => {\n                  return {cart : [] }\n              }, () => {\n                  this.setProducts();\n                  this.addTotals\n              })\n    }\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map(item =>(subTotal += item.total));\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax\n        this.setState(() => {\n            return {\n                cartSubTotal : subTotal,\n                cartTax : tax,\n                cartTotal : total\n            }\n        })\n    }\n    render() {\n        return (\n            <ProductContext.Provider \n            value= {{\n                ...this.state,\n                handleDetail : this.handleDetail,\n                addToCart :this.addToCart,\n                openModal : this.openModal,\n                closeModal : this.closeModal,\n                increment : this.increment,\n                decrement : this.decrement,\n                removeItem : this.removeItem,\n                clearCart : this.clearCart\n            }}\n        >\n              {this.props.children}  \n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider , ProductConsumer };\n\n\n"]},"metadata":{},"sourceType":"module"}